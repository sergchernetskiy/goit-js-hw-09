{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SA0CvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CA7CbL,EAAQa,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIV,EAAQW,OAAOhB,EAAQK,MAAMY,MAAMC,QACvC,MAAMC,EAAYH,OAAOhB,EAAQoB,KAAKH,MAAMC,QACtCG,EAASL,OAAOhB,EAAQqB,OAAOJ,MAAMC,QAE3C,IAAK,IAAII,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,MAAMlB,EAAWkB,EAAI,EACrBjB,GAASc,EAEThB,EAAcC,EAAUC,GACrBkB,KACCC,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAW,CAE/CD,SAAU,gBACVuB,SAAS,EACTC,QAAS,MAIdC,MACCL,EAAA1B,GAAS2B,OAAOK,QACd,sBAAoB1B,QAAeC,MAAW,CAE5CD,SAAU,gBACVuB,SAAS,EACTC,QAAS,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\n//console.log('firstDelay', firstDelay);\n//console.log('delayStep', delayStep);\n//console.log('amount', amount);\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(formRef.delay.value.trim());\n  const delayStep = Number(formRef.step.value.trim());\n  const amount = Number(formRef.amount.value.trim());\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    delay += delayStep;\n\n    createPromise(position, delay)\n      .then(\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            position: 'center-center',\n            useIcon: false,\n            opacity: 0.7,\n          }\n        )\n      )\n      .catch(\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            position: 'center-center',\n            useIcon: false,\n            opacity: 0.7,\n          }\n        )\n      );\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","Number","value","trim","delayStep","step","amount","i","then","$parcel$interopDefault","Notify","success","useIcon","opacity","catch","failure"],"version":3,"file":"03-promises.8b91277f.js.map"}