{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SA0CvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IA7CPL,EAAQa,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIV,EAAQW,OAAOhB,EAAQK,MAAMY,MAAMC,QACjCC,EAAYH,OAAOhB,EAAQoB,KAAKH,MAAMC,QACtCG,EAASL,OAAOhB,EAAQqB,OAAOJ,MAAMC,QAElCI,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,IAAMlB,EAAWkB,EAAI,EAGrBnB,EAAcC,EAFdC,GAASc,GAGNI,KACCC,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAC5C,CACAD,SAAU,gBACVwB,SAAS,EACTC,QAAS,MAIdC,MACCN,EAAA1B,GAAS2B,OAAOM,QACd,sBAAqCJ,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAC3C,CACED,SAAU,gBACVwB,SAAS,EACTC,QAAS,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\n//console.log('firstDelay', firstDelay);\n//console.log('delayStep', delayStep);\n//console.log('amount', amount);\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(formRef.delay.value.trim());\n  const delayStep = Number(formRef.step.value.trim());\n  const amount = Number(formRef.amount.value.trim());\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    delay += delayStep;\n\n    createPromise(position, delay)\n      .then(\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            position: 'center-center',\n            useIcon: false,\n            opacity: 0.7,\n          }\n        )\n      )\n      .catch(\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            position: 'center-center',\n            useIcon: false,\n            opacity: 0.7,\n          }\n        )\n      );\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","Number","value","trim","delayStep","step","amount","i","then","$parcel$interopDefault","Notify","success","concat","useIcon","opacity","catch","failure"],"version":3,"file":"03-promises.a90017af.js.map"}