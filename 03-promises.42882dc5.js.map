{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SACnCC,EAAQC,OAAOJ,EAAQK,MAAMC,MAAMC,QACjCC,EAAYJ,OAAOJ,EAAQS,KAAKH,MAAMC,QACtCG,EAASN,OAAOJ,EAAQW,OAAOL,MAAMC,QAsC3C,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUR,MAAAS,IAEtBG,EAAO,CAAEJ,WAAUR,MAAAS,G,GAClBA,E,IA1CPd,EAAQsB,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAQe,GAAK,EAAG,CAClC,IAAMZ,EAAWY,EAAI,EAErBb,EAAcC,EAAUV,GACrBuB,KACCC,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAAN3B,EAAM,MAC5C,CACAU,SAAU,gBACVkB,SAAS,EACTC,QAAS,MAIdC,MACCN,EAAA7B,GAAS8B,OAAOM,QACd,sBAAqCJ,OAAfjB,EAAS,QAAYiB,OAAN3B,EAAM,MAC3C,CACEU,SAAU,gBACVkB,SAAS,EACTC,QAAS,MAKjB7B,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nlet delay = Number(formRef.delay.value.trim());\nconst delayStep = Number(formRef.step.value.trim());\nconst amount = Number(formRef.amount.value.trim());\n//console.log('firstDelay', firstDelay);\n//console.log('delayStep', delayStep);\n//console.log('amount', amount);\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n\n    createPromise(position, delay)\n      .then(\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            position: 'center-center',\n            useIcon: false,\n            opacity: 0.7,\n          }\n        )\n      )\n      .catch(\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            position: 'center-center',\n            useIcon: false,\n            opacity: 0.7,\n          }\n        )\n      );\n\n    delay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$delay","Number","delay","value","trim","$ce04d3a99e08e73b$var$delayStep","step","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","i","then","$parcel$interopDefault","Notify","success","concat","useIcon","opacity","catch","failure"],"version":3,"file":"03-promises.42882dc5.js.map"}